name: Codespace Automation

on:
  workflow_dispatch:  # Permite ejecuci√≥n manual
  schedule:
    - cron: '0 8 * * 1-5'  # Ejecutar d√≠as laborables a las 8 AM

jobs:
  codespace-task:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup GitHub CLI
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install GitHub CLI
        run: |
          # Install GitHub CLI
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y
          
      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.PAT }}" | gh auth login --with-token
          
      - name: Listar Codespaces y obtener informaci√≥n
        id: get-codespace-info
        run: |
          echo "Buscando codespace para el repositorio ${{ github.repository }}..."
          
          # Obtener la lista de codespaces
          response=$(gh codespace list --json name,id,repository,state)
          
          # Extraer el nombre y el ID del codespace para este repositorio usando jq
          codespace_name=$(echo "$response" | jq -r '.[] | select(.repository.full_name == "${{ github.repository }}") | .name')
          codespace_id=$(echo "$response" | jq -r '.[] | select(.repository.full_name == "${{ github.repository }}") | .id')
          
          if [ "$codespace_name" = "null" ] || [ -z "$codespace_name" ]; then
            echo "Error: No se encontr√≥ un codespace para el repositorio ${{ github.repository }}"
            exit 1
          fi
          
          echo "Codespace encontrado: $codespace_name (ID: $codespace_id)"
          echo "codespace_name=$codespace_name" >> $GITHUB_OUTPUT
          echo "codespace_id=$codespace_id" >> $GITHUB_OUTPUT

      - name: Iniciar Codespace
        id: start-codespace
        run: |
          echo "Iniciando codespace: ${{ steps.get-codespace-info.outputs.codespace_name }}"
          gh codespace start -c "${{ steps.get-codespace-info.outputs.codespace_name }}"

      - name: Esperar a que el Codespace est√© disponible
        run: |
          echo "Esperando a que el codespace est√© disponible (tiempo m√°ximo: 15 minutos)..."
          CODESPACE_NAME="${{ steps.get-codespace-info.outputs.codespace_name }}"
          
          for i in {1..90}; do
            echo "=== Intento $i de 90 ==="
            
            # Verificar estado del codespace
            status=$(gh codespace list --json name,state | jq -r ".[] | select(.name == \"$CODESPACE_NAME\") | .state")
            
            echo "Estado del codespace: $status"
            
            if [ "$status" = "Available" ]; then
              echo "‚úÖ Codespace est√° disponible despu√©s de $((i*10)) segundos"
              break
            fi
            
            if (( i % 10 == 0 )); then
              elapsed_minutes=$((i/6))
              echo "‚è≥ Tiempo transcurrido: ${elapsed_minutes} minutos"
            fi
            
            sleep 10
          done
          
          if [ "$status" != "Available" ]; then
            echo "‚ùå Error: Codespace no est√° disponible despu√©s de 15 minutos"
            exit 1
          fi

      - name: Ejecutar comandos en el Codespace
        run: |
          echo "Ejecutando comandos en el codespace..."
          CODESPACE_NAME="${{ steps.get-codespace-info.outputs.codespace_name }}"
          
          # Comando 1: Navegar al directorio y listar contenido
          echo "üìÇ Ejecutando comando 1: Listar contenido del directorio"
          gh codespace ssh -c "$CODESPACE_NAME" -- "cd /workspaces/GLMCookies && ls -la"
          
          # Comando 2: Verificar versi√≥n de Python
          echo "üêç Ejecutando comando 2: Verificar versi√≥n de Python"
          gh codespace ssh -c "$CODESPACE_NAME" -- "python --version"
          
          # Comando 3: Instalar dependencias (si existe requirements.txt)
          echo "üì¶ Ejecutando comando 3: Instalar dependencias"
          gh codespace ssh -c "$CODESPACE_NAME" -- "cd /workspaces/GLMCookies && pip install -r requirements.txt"

      - name: Detener Codespace
        if: always()
        run: |
          CODESPACE_NAME="${{ steps.get-codespace-info.outputs.codespace_name }}"
          echo "üõë Deteniendo el codespace..."
          gh codespace stop -c "$CODESPACE_NAME"
